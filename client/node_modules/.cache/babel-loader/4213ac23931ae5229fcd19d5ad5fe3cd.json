{"ast":null,"code":"var _jsxFileName = \"/home/manimozhi/Desktop/board/client/src/Connection2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../node_modules/react-vis/dist/style.css\";\nimport axios from \"axios\";\nimport { XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from \"react-vis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection2 = () => {\n  _s();\n\n  {\n    const [chartData, setChartData] = useState({});\n    const [i_a, seti_a] = useState([]);\n    const [v_ab, setv_ab] = useState([]);\n\n    const chart = () => {\n      let current = [];\n      let voltage = [];\n      axios.get(\"http://localhost:3000/register_values_em6400\").then(res => {\n        console.log(res);\n\n        for (const dataObj of res.data) {\n          current.push(parseInt(dataObj.i_a));\n          voltage.push(parseInt(dataObj.v_ab));\n        }\n\n        setChartData({\n          labels: voltage,\n          datasets: [{\n            label: \"voltage vs current\",\n            data: current,\n            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n            borderWidth: 4\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(current, voltage);\n    };\n\n    useEffect(() => {\n      chart();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(XYPlot, {\n      height: 300,\n      width: 700,\n      children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n        data: ChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this);\n  }\n};\n\n_s(Connection2, \"SdYXFWfbnpvJPfckpMsD6qX4o3I=\");\n\n_c = Connection2;\nexport default Connection2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection2\");","map":{"version":3,"sources":["/home/manimozhi/Desktop/board/client/src/Connection2.js"],"names":["React","useState","useEffect","axios","XYPlot","LineSeries","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","Connection2","chartData","setChartData","i_a","seti_a","v_ab","setv_ab","chart","current","voltage","get","then","res","console","log","dataObj","data","push","parseInt","labels","datasets","label","backgroundColor","borderWidth","catch","err","ChartData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,0CAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAEEC,MAFF,EAGEC,UAHF,EAIEC,iBAJF,EAKEC,mBALF,EAMEC,KANF,EAOEC,KAPF,QAUO,WAVP;;;AAaA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AAAC,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACD,UAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,UAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;;AAEA,UAAMgB,KAAK,GAAG,MAAM;AAClB,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;AACAhB,MAAAA,KAAK,CACFiB,GADH,CACO,8CADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,aAAK,MAAMG,OAAX,IAAsBH,GAAG,CAACI,IAA1B,EAAgC;AAC9BR,UAAAA,OAAO,CAACS,IAAR,CAAaC,QAAQ,CAACH,OAAO,CAACZ,GAAT,CAArB;AACAM,UAAAA,OAAO,CAACQ,IAAR,CAAaC,QAAQ,CAACH,OAAO,CAACV,IAAT,CAArB;AACD;;AACDH,QAAAA,YAAY,CAAC;AACXiB,UAAAA,MAAM,EAAEV,OADG;AAEXW,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,oBADT;AAEEL,YAAAA,IAAI,EAAER,OAFR;AAGEc,YAAAA,eAAe,EAAE,CAAC,yBAAD,CAHnB;AAIEC,YAAAA,WAAW,EAAE;AAJf,WADQ;AAFC,SAAD,CAAZ;AAWD,OAnBH,EAoBGC,KApBH,CAoBSC,GAAG,IAAI;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD,OAtBH;AAuBAZ,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBC,OAArB;AACD,KA3BD;;AA6BAjB,IAAAA,SAAS,CAAC,MAAM;AACde,MAAAA,KAAK;AACN,KAFQ,EAEN,EAFM,CAAT;AAIM,wBAAU,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,GAAhB;AAAqB,MAAA,KAAK,EAAE,GAA5B;AAAA,8BACN,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAHM,eAIN,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAJM,eAKN,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEmB;AAAlB;AAAA;AAAA;AAAA;AAAA,cALM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AAMe;AACpB,CA7CH;;GAAM1B,W;;KAAAA,W;AA+CN,eAAeA,WAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport \"../node_modules/react-vis/dist/style.css\";\nimport axios from \"axios\";\n\nimport {\n\n  XYPlot,\n  LineSeries,\n  VerticalGridLines,\n  HorizontalGridLines,\n  XAxis,\n  YAxis,\n \n  \n} from \"react-vis\";\n \n   \nconst Connection2 = () => {\n  {const [chartData, setChartData] = useState({});\n  const [i_a, seti_a] = useState([]);\n  const [v_ab, setv_ab] = useState([]);\n\n  const chart = () => {\n    let current = [];\n    let voltage = [];\n    axios\n      .get(\"http://localhost:3000/register_values_em6400\")\n      .then(res => {\n        console.log(res);\n        for (const dataObj of res.data) {\n          current.push(parseInt(dataObj.i_a));\n          voltage.push(parseInt(dataObj.v_ab));\n        }\n        setChartData({\n          labels: voltage,\n          datasets: [\n            {\n              label: \"voltage vs current\",\n              data: current,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    console.log(current, voltage);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n    \n        return (  <XYPlot height={300} width={700}>\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <XAxis />\n            <YAxis />\n            <LineSeries data={ChartData} />\n          </XYPlot> );}\n  }\n  \nexport default Connection2;\n\n\n\n \n\n  \n   \n"]},"metadata":{},"sourceType":"module"}