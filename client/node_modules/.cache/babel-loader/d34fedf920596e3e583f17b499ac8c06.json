{"ast":null,"code":"var _jsxFileName = \"/home/manimozhi/Desktop/board/client/src/displaygraphs/Thd_I_vs_timestamp.js\",\n    _s = $RefreshSig$();\n\n//thd_I- has graphs for thd_i_a,thd_i_b,thd_i_c vs timestamp\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thd_I_vs_timestamp = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let thd_i_a = [];\n    let thd_i_b = [];\n    let thd_i_c = [];\n    let timestamp = [];\n    axios.get(\"http://localhost:3000/register_values_em6400\").then(res => {\n      //console.log(res);\n      for (const dataObj of res.data) {\n        thd_i_a.push(parseInt(dataObj.thd_i_a));\n        thd_i_b.push(parseInt(dataObj.thd_i_b));\n        thd_i_c.push(parseInt(dataObj.thd_i_c));\n        timestamp.push(parseInt(dataObj.timestamp));\n      }\n\n      setChartData({\n        labels: timestamp,\n        datasets: [{\n          label: \"thd_i_a vs time\",\n          data: thd_i_a,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(75,192,192,1)\",\n          borderWidth: 4\n        }, {\n          label: \"thd_i_b vs time\",\n          data: thd_i_b,\n          fill: false,\n          borderColor: \"orange\",\n          backgroundColor: \"orange\",\n          borderWidth: 4\n        }, {\n          label: \"thd_i_c vs time\",\n          data: thd_i_c,\n          fill: false,\n          borderColor: \"#742774\",\n          backgroundColor: \"#742774\",\n          borderWidth: 4\n        }, options]\n      });\n    }).catch(err => {\n      console.log(err);\n    }); //console.log(current2, voltage2);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linechart2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"%_vs_Time_for_current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            y: [{\n              display: true,\n              title: {\n                display: true,\n                text: 'month',\n                color: '#911',\n                font: {\n                  family: 'Comic Sans MS',\n                  size: 20,\n                  weight: 20,\n                  lineHeight: 1.2\n                }\n              },\n              //  ticks: {\n              //    autoSkip: true,\n              //    maxTicksLimit: 10,\n              //    beginAtZero: true,\n              //  },\n              gridLines: {\n                display: false\n              }\n            }],\n            x: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thd_I_vs_timestamp, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n\n_c = Thd_I_vs_timestamp;\nexport default Thd_I_vs_timestamp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thd_I_vs_timestamp\");","map":{"version":3,"sources":["/home/manimozhi/Desktop/board/client/src/displaygraphs/Thd_I_vs_timestamp.js"],"names":["React","useState","useEffect","Line","axios","Thd_I_vs_timestamp","chartData","setChartData","chart","thd_i_a","thd_i_b","thd_i_c","timestamp","get","then","res","dataObj","data","push","parseInt","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","options","catch","err","console","log","responsive","scales","y","display","title","text","color","font","family","size","weight","lineHeight","gridLines","x"],"mappings":"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","sourcesContent":["//thd_I- has graphs for thd_i_a,thd_i_b,thd_i_c vs timestamp\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Thd_I_vs_timestamp = () => {\n  \n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let thd_i_a = [];\n    let thd_i_b = [];\n    let thd_i_c = [];\n    \n    let timestamp = [];\n    axios\n      .get(\"http://localhost:3000/register_values_em6400\")\n      .then(res => {\n        //console.log(res);\n        for (const dataObj of res.data) {\n          thd_i_a.push(parseInt(dataObj.thd_i_a));\n          thd_i_b.push(parseInt(dataObj.thd_i_b));\n          thd_i_c.push(parseInt(dataObj.thd_i_c));\n          \n          timestamp.push(parseInt(dataObj.timestamp));\n        }\n        setChartData({\n          labels:timestamp,\n          datasets: [\n            {\n              label: \"thd_i_a vs time\",\n              data: thd_i_a,\n              fill: false,\n              backgroundColor: \"rgba(75,192,192,1)\",\n              borderColor: \"rgba(75,192,192,1)\",\n              borderWidth: 4\n            },\n            {\n              label: \"thd_i_b vs time\",\n              data: thd_i_b,\n              fill:false,\n              borderColor:\"orange\",\n              backgroundColor:\"orange\",\n              borderWidth: 4\n            },\n            {\n              label: \"thd_i_c vs time\",\n              data: thd_i_c,\n              fill:false,\n              borderColor: \"#742774\",\n              backgroundColor: \"#742774\",\n              borderWidth: 4\n            },\n            options\n            \n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //console.log(current2, voltage2);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <div className=\"linechart2\">\n      <h1>%_vs_Time_for_current</h1>\n      <div>\n        <Line data={chartData}\n          options={{\n            responsive: true,\n            scales: {\n              y: [\n                {\n                  display: true,\n                  title:{ display:true,\n                  text:'month',\n                  color:'#911',\n                  font:{\n                    family:'Comic Sans MS',\n                    size:20,\n                    weight:20,\n                    lineHeight:1.2,\n                  },},\n                  //  ticks: {\n                  //    autoSkip: true,\n                  //    maxTicksLimit: 10,\n                  //    beginAtZero: true,\n                  //  },\n                   gridLines: {\n                     display: false\n                   }\n                }\n              ],\n              x: [\n                {  \n                  gridLines: {\n                    display: false\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Thd_I_vs_timestamp;"]},"metadata":{},"sourceType":"module"}