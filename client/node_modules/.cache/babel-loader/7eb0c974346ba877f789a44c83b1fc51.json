{"ast":null,"code":"var _jsxFileName = \"/home/manimozhi/Desktop/board/client/src/App.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/react-vis/dist/style.css\"; //import Connection from './Components/Connection.js';\n\nimport Connection1 from './Connection1.js';\nimport Connection from './Connection.js';\nimport Connection2 from './Connection2.js';\nimport axios from \"axios\"; //import D3FlareData from '../datasets/d3-flare-example.json';\n\nimport \"./App.css\"; //import Home from \"./Home\";\n\nimport Header from \"./Header\";\nimport { Hint, XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, VerticalBarSeries, HorizontalBarSeries, HeatmapSeries, RadialChart } from \"react-vis\"; // all imports are over by here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: false,\n      data: []\n    };\n\n    this.inputdata = () => {\n      axios.get(\"http://localhost:3000/register_values_em6400\").then(res => {\n        //console.log(res);\n        let data1 = [];\n\n        for (const dataObj of res.data) {\n          let temp = {\n            x: \"\",\n            y: \"\"\n          };\n          temp.x = parseInt(dataObj.i_b);\n          temp.y = parseInt(dataObj.v_bc);\n          data1.push(temp);\n        }\n\n        ;\n        this.setState({\n          data: data1,\n          value: false\n        });\n        console.log(data1);\n      }).catch(err => {\n        console.log(err);\n      }); // useEffect(() => {\n      //   chart();\n      // }, []);\n    };\n\n    this.componentDidMount = () => {\n      this.inputdata();\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    const myData = [{\n      angle: 1\n    }, {\n      angle: 5\n    }, {\n      angle: 2\n    }]; // //const data = [\n    //   // { x: 1, y: 0, color: 10 },\n    //   { x: 1, y: 5, color: 10 },\n    //   { x: 1, y: 10, color: 6 },\n    //   { x: 1, y: 15, color: 7 },\n    //   { x: 2, y: 0, color: 12 },\n    //   { x: 2, y: 5, color: 2 },\n    //   { x: 2, y: 10, color: 1 },\n    //   { x: 2, y: 15, color: 12 },\n    //   { x: 3, y: 0, color: 9 },\n    //   { x: 3, y: 5, color: 2 },\n    //   { x: 3, y: 10, color: 6 },\n    //   { x: 3, y: 15, color: 12 },\n    // ];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundColor: \"\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 300,\n        width: 700,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 300,\n        width: 700,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 300,\n        width: 700,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalBarSeries, {\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 400,\n        width: 700,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HeatmapSeries, {\n          className: \"heatmap-series-example\" //onValueMouseOver={(v) => this.setState({ value: v })}\n          //onSeriesMouseOut={(v) => this.setState({ value: false })}\n          ,\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(RadialChart, {\n        data: myData,\n        width: 400,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Connection1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Connection2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/manimozhi/Desktop/board/client/src/App.js"],"names":["React","Component","useEffect","useState","BrowserRouter","Router","Route","Switch","Connection1","Connection","Connection2","axios","Header","Hint","XYPlot","LineSeries","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","VerticalBarSeries","HorizontalBarSeries","HeatmapSeries","RadialChart","App","state","value","data","inputdata","get","then","res","data1","dataObj","temp","x","y","parseInt","i_b","v_bc","push","setState","console","log","catch","err","componentDidMount","render","myData","angle","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component,useEffect,useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/react-vis/dist/style.css\";\n//import Connection from './Components/Connection.js';\nimport Connection1 from './Connection1.js';\nimport Connection from './Connection.js';\nimport Connection2 from './Connection2.js';\nimport axios from \"axios\";\n\n\n\n//import D3FlareData from '../datasets/d3-flare-example.json';\nimport \"./App.css\";\n//import Home from \"./Home\";\nimport Header from \"./Header\";\nimport {\n  Hint,\n  XYPlot,\n  LineSeries,\n  VerticalGridLines,\n  HorizontalGridLines,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  HorizontalBarSeries,\n  HeatmapSeries,\n  RadialChart,\n  \n} from \"react-vis\";\n\n\n\n\n// all imports are over by here\n\n\nclass App extends Component {\n\n    state = {\n    value:false,\n    data : []\n  };\n\n   inputdata = () => {\n  \n  \n  axios\n        .get(\"http://localhost:3000/register_values_em6400\")\n        .then(res => {\n          //console.log(res);\n          let data1=[];\n          for (const dataObj of res.data) {\n            let temp = {x:\"\",y:\"\"}\n            temp.x= parseInt(dataObj.i_b);\n            temp.y = parseInt(dataObj.v_bc);\n            data1.push(temp);\n          };\n          this.setState({data:data1,value:false});\n          console.log(data1);\n          \n        })\n        .catch(err => {\n          console.log(err);\n        });\n      \n    \n  \n    // useEffect(() => {\n    //   chart();\n    // }, []);\n  }\n  componentDidMount = ()=>{\n    this.inputdata();\n  }\n\n  render() {\n    const { value } = this.state;\n    const myData = [{ angle: 1 }, { angle: 5 }, { angle: 2 }];\n    \n    // //const data = [\n    //   // { x: 1, y: 0, color: 10 },\n    //   { x: 1, y: 5, color: 10 },\n    //   { x: 1, y: 10, color: 6 },\n    //   { x: 1, y: 15, color: 7 },\n    //   { x: 2, y: 0, color: 12 },\n    //   { x: 2, y: 5, color: 2 },\n    //   { x: 2, y: 10, color: 1 },\n    //   { x: 2, y: 15, color: 12 },\n    //   { x: 3, y: 0, color: 9 },\n    //   { x: 3, y: 5, color: 2 },\n    //   { x: 3, y: 10, color: 6 },\n    //   { x: 3, y: 15, color: 12 },\n    // ];\n   \n  \n    return (\n      <div className=\"App\" style={{ backgroundColor: \"\" }}>\n       \n            \n              <Header />\n              <XYPlot height={300} width={700}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <LineSeries data={this.state.data} />\n              </XYPlot>\n\n              <XYPlot height={300} width={700}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <VerticalBarSeries data={this.state.data} />\n              </XYPlot>\n\n              <XYPlot height={300} width={700}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <HorizontalBarSeries data={this.state.data} />\n              </XYPlot>\n\n               <XYPlot height={400} width={700}>\n                <XAxis />\n                <YAxis />\n                {}\n                <HeatmapSeries\n                  className=\"heatmap-series-example\"\n                  //onValueMouseOver={(v) => this.setState({ value: v })}\n                  //onSeriesMouseOut={(v) => this.setState({ value: false })}\n                  data={this.state.data}\n                />\n                \n              </XYPlot> \n\n              <RadialChart data={myData} width={400} height={400} />\n              \n              <Connection1 />\n              <Connection />\n              <Connection2 />\n            \n         \n          \n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}