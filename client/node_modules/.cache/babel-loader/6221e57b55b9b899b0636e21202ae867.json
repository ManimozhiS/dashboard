{"ast":null,"code":"var _jsxFileName = \"/home/manimozhi/Desktop/board/client/src/App.js\";\nimport React, { Component } from \"react\"; //import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"../node_modules/react-vis/dist/style.css\";\nimport Voltage_vs_timestamp from \"./displaygraphs/Voltage_vs_timestamp.js\";\nimport Current_vs_timestamp from \"./displaygraphs/Current_vs_timestamp.js\";\nimport Voltage2_vs_timestamp from \"./displaygraphs/Voltage2_vs_timestamp.js\";\nimport Load_vs_timestamp from \"./displaygraphs/Load_vs_timestamp\";\nimport Thd_V_vs_timestamp from \"./displaygraphs/Thd_V_vs_timestamp\";\nimport Thd_I_vs_timestamp from \"./displaygraphs/Thd_I_vs_timestamp\";\nimport Powerfactor_vs_timestamp from \"./displaygraphs/Powerfactor_vs_timestamp\";\nimport Connection3 from \"./Connection3.js\";\nimport Frequency_vs_Timestamp from \"./displaygraphs/Frequency_vs_timestamp\";\nimport axios from \"axios\";\nimport Card2 from \"./Cards/Card2.js\"; //import D3FlareData from '../datasets/d3-flare-example.json';\n\nimport \"./App.css\"; //import Home from \"./Home\";\n\nimport Header from \"./Header\";\nimport { Hint, XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, VerticalBarSeries, HorizontalBarSeries, HeatmapSeries, RadialChart } from \"react-vis\"; // all imports are over by here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: false,\n      data: []\n    };\n\n    this.inputdata = () => {\n      axios.get(\"http://localhost:3000/register_values_em6400\").then(res => {\n        //console.log(res);\n        let data1 = [];\n\n        for (const dataObj of res.data) {\n          let temp = {\n            x: \"\",\n            y: \"\"\n          };\n          temp.x = parseInt(dataObj.i_b);\n          temp.y = parseInt(dataObj.v_bc);\n          data1.push(temp);\n        }\n\n        this.setState({\n          data: data1,\n          value: false\n        });\n        console.log(data1);\n      }).catch(err => {\n        console.log(err);\n      }); // useEffect(() => {\n      //   chart();\n      // }, []);\n    };\n\n    this.componentDidMount = () => {\n      this.inputdata();\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    const myData = [{\n      angle: 1\n    }, {\n      angle: 5\n    }, {\n      angle: 2\n    }]; // //const data = [\n    //   // { x: 1, y: 0, color: 10 },\n    //   { x: 1, y: 5, color: 10 },\n    //   { x: 1, y: 10, color: 6 },\n    //   { x: 1, y: 15, color: 7 },\n    //   { x: 2, y: 0, color: 12 },\n    //   { x: 2, y: 5, color: 2 },\n    //   { x: 2, y: 10, color: 1 },\n    //   { x: 2, y: 15, color: 12 },\n    //   { x: 3, y: 0, color: 9 },\n    //   { x: 3, y: 5, color: 2 },\n    //   { x: 3, y: 10, color: 6 },\n    //   { x: 3, y: 15, color: 12 },\n    // ];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundColor: \"\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: /*#__PURE__*/_jsxDEV(Current_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voltage\",\n        children: /*#__PURE__*/_jsxDEV(Voltage_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voltage2\",\n        children: /*#__PURE__*/_jsxDEV(Voltage2_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"powerfactor\",\n        children: /*#__PURE__*/_jsxDEV(Powerfactor_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load\",\n        children: /*#__PURE__*/_jsxDEV(Load_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frequency\",\n        children: /*#__PURE__*/_jsxDEV(Frequency_vs_Timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Thd\",\n        children: /*#__PURE__*/_jsxDEV(Thd_V_vs_timestamp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Thd_I_vs_timestamp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/manimozhi/Desktop/board/client/src/App.js"],"names":["React","Component","Voltage_vs_timestamp","Current_vs_timestamp","Voltage2_vs_timestamp","Load_vs_timestamp","Thd_V_vs_timestamp","Thd_I_vs_timestamp","Powerfactor_vs_timestamp","Connection3","Frequency_vs_Timestamp","axios","Card2","Header","Hint","XYPlot","LineSeries","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","VerticalBarSeries","HorizontalBarSeries","HeatmapSeries","RadialChart","App","state","value","data","inputdata","get","then","res","data1","dataObj","temp","x","y","parseInt","i_b","v_bc","push","setState","console","log","catch","err","componentDidMount","render","myData","angle","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../node_modules/react-vis/dist/style.css\";\nimport Voltage_vs_timestamp from \"./displaygraphs/Voltage_vs_timestamp.js\";\nimport Current_vs_timestamp from \"./displaygraphs/Current_vs_timestamp.js\";\nimport Voltage2_vs_timestamp from \"./displaygraphs/Voltage2_vs_timestamp.js\";\nimport Load_vs_timestamp from \"./displaygraphs/Load_vs_timestamp\";\nimport Thd_V_vs_timestamp from \"./displaygraphs/Thd_V_vs_timestamp\";\nimport Thd_I_vs_timestamp from \"./displaygraphs/Thd_I_vs_timestamp\";\nimport Powerfactor_vs_timestamp from \"./displaygraphs/Powerfactor_vs_timestamp\";\nimport Connection3 from \"./Connection3.js\";\nimport Frequency_vs_Timestamp from \"./displaygraphs/Frequency_vs_timestamp\";\nimport axios from \"axios\";\n\n\nimport Card2 from \"./Cards/Card2.js\";\n\n//import D3FlareData from '../datasets/d3-flare-example.json';\nimport \"./App.css\";\n//import Home from \"./Home\";\nimport Header from \"./Header\";\nimport {\n  Hint,\n  XYPlot,\n  LineSeries,\n  VerticalGridLines,\n  HorizontalGridLines,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  HorizontalBarSeries,\n  HeatmapSeries,\n  RadialChart,\n} from \"react-vis\";\n\n// all imports are over by here\n\nclass App extends Component {\n  state = {\n    value: false,\n    data: [],\n  };\n\n  inputdata = () => {\n    axios\n      .get(\"http://localhost:3000/register_values_em6400\")\n      .then((res) => {\n        //console.log(res);\n        let data1 = [];\n        for (const dataObj of res.data) {\n          let temp = { x: \"\", y: \"\" };\n          temp.x = parseInt(dataObj.i_b);\n          temp.y = parseInt(dataObj.v_bc);\n          data1.push(temp);\n        }\n        this.setState({ data: data1, value: false });\n        console.log(data1);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // useEffect(() => {\n    //   chart();\n    // }, []);\n  };\n  componentDidMount = () => {\n    this.inputdata();\n  };\n\n  render() {\n    const { value } = this.state;\n    const myData = [{ angle: 1 }, { angle: 5 }, { angle: 2 }];\n\n    // //const data = [\n    //   // { x: 1, y: 0, color: 10 },\n    //   { x: 1, y: 5, color: 10 },\n    //   { x: 1, y: 10, color: 6 },\n    //   { x: 1, y: 15, color: 7 },\n    //   { x: 2, y: 0, color: 12 },\n    //   { x: 2, y: 5, color: 2 },\n    //   { x: 2, y: 10, color: 1 },\n    //   { x: 2, y: 15, color: 12 },\n    //   { x: 3, y: 0, color: 9 },\n    //   { x: 3, y: 5, color: 2 },\n    //   { x: 3, y: 10, color: 6 },\n    //   { x: 3, y: 15, color: 12 },\n    // ];\n\n    return (\n      <div className=\"App\" style={{backgroundColor: \"\"}} >\n        <Header />\n        <Card2 />\n      <div className=\"current\">\n        <Current_vs_timestamp />\n      </div>\n      <div className=\"voltage\">\n        <Voltage_vs_timestamp />\n      </div>\n      <div className=\"voltage2\">\n        <Voltage2_vs_timestamp />\n      </div> \n      <div className=\"powerfactor\">\n        <Powerfactor_vs_timestamp />\n      </div>\n      <div className=\"load\">\n        <Load_vs_timestamp />\n      </div>\n      <div className=\"frequency\">\n        <Frequency_vs_Timestamp />\n      </div>\n      <div className=\"Thd\">\n        <Thd_V_vs_timestamp />\n      </div>\n      <div className=\"thd\"></div>\n        <Thd_I_vs_timestamp />\n\n        {/* <Connection3 />\n            \n              <XYPlot height={300} width={2000}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <LineSeries data={this.state.data} />\n              </XYPlot>\n\n              <XYPlot height={300} width={2000}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <VerticalBarSeries data={this.state.data} />\n              </XYPlot>\n\n              <XYPlot height={300} width={2000}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <HorizontalBarSeries data={this.state.data} />\n              </XYPlot>\n\n               <XYPlot height={400} width={2000}>\n                <XAxis />\n                <YAxis />\n                {}\n                <HeatmapSeries\n                  className=\"heatmap-series-example\"\n                  //onValueMouseOver={(v) => this.setState({ value: v })}\n                  //onSeriesMouseOut={(v) => this.setState({ value: false })}\n                  data={this.state.data}\n                />\n                \n              </XYPlot> \n\n              <RadialChart data={myData} width={400} height={400} />\n              \n               */}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}