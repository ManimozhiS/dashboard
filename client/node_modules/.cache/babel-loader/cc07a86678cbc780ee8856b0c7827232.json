{"ast":null,"code":"var _jsxFileName = \"/home/manimozhi/Desktop/board/client/src/displaygraphs/Thd_I_vs_timestamp.js\",\n    _s = $RefreshSig$();\n\n//thd_I- has graphs for thd_i_a,thd_i_b,thd_i_c vs timestamp\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thd_I_vs_timestamp = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let thd_i_a = [];\n    let thd_i_b = [];\n    let thd_i_c = [];\n    let timestamp = [];\n    axios.get(\"http://localhost:3000/register_values_em6400\").then(res => {\n      //console.log(res);\n      for (const dataObj of res.data) {\n        thd_i_a.push(parseInt(dataObj.thd_i_a));\n        thd_i_b.push(parseInt(dataObj.thd_i_b));\n        thd_i_c.push(parseInt(dataObj.thd_i_c));\n        timestamp.push(parseInt(dataObj.timestamp));\n      }\n\n      setChartData({\n        labels: timestamp,\n        datasets: [{\n          label: \"thd_i_a vs time\",\n          data: thd_i_a,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(75,192,192,1)\",\n          borderWidth: 4\n        }, {\n          label: \"thd_i_b vs time\",\n          data: thd_i_b,\n          fill: false,\n          borderColor: \"orange\",\n          backgroundColor: \"orange\",\n          borderWidth: 4\n        }, {\n          label: \"thd_i_c vs time\",\n          data: thd_i_c,\n          fill: false,\n          borderColor: \"#742774\",\n          backgroundColor: \"#742774\",\n          borderWidth: 4\n        }],\n        type: 'line',\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Month',\n                color: '#911',\n                font: {\n                  family: 'Comic Sans MS',\n                  size: 20,\n                  weight: 'bold',\n                  lineHeight: 1.2\n                },\n                padding: {\n                  top: 50,\n                  left: 0,\n                  right: 0,\n                  bottom: 0\n                }\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Value',\n                color: '#191',\n                font: {\n                  family: 'Times',\n                  size: 20,\n                  style: 'normal',\n                  lineHeight: 1.2\n                },\n                padding: {\n                  top: 30,\n                  left: 0,\n                  right: 0,\n                  bottom: 0\n                }\n              }\n            }\n          }\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    }); //console.log(current2, voltage2);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linechart2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"%_vs_Time_for_current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData // options={{\n        //   responsive: true,\n        // scales: {\n        //   y: [\n        //     {\n        //       display: true,\n        //       title:{ display:true,\n        //       text:'month',\n        //       color:'#911',\n        //       font:{\n        //         family:'Comic Sans MS',\n        //         size:20,\n        //         weight:20,\n        //         lineHeight:1.2,\n        //       },},\n        //       //  ticks: {\n        //       //    autoSkip: true,\n        //       //    maxTicksLimit: 10,\n        //       //    beginAtZero: true,\n        //       //  },\n        //        gridLines: {\n        //          display: false\n        //        }\n        //     }\n        //   ],\n        //   x: [\n        //     {  \n        //       gridLines: {\n        //         display: false\n        //       }\n        //     }\n        //   ]\n        // }\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thd_I_vs_timestamp, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n\n_c = Thd_I_vs_timestamp;\nexport default Thd_I_vs_timestamp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thd_I_vs_timestamp\");","map":{"version":3,"sources":["/home/manimozhi/Desktop/board/client/src/displaygraphs/Thd_I_vs_timestamp.js"],"names":["React","useState","useEffect","Line","axios","Thd_I_vs_timestamp","chartData","setChartData","chart","thd_i_a","thd_i_b","thd_i_c","timestamp","get","then","res","dataObj","data","push","parseInt","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","type","options","responsive","scales","x","display","title","text","color","font","family","size","weight","lineHeight","padding","top","left","right","bottom","y","style","catch","err","console","log"],"mappings":"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","sourcesContent":["//thd_I- has graphs for thd_i_a,thd_i_b,thd_i_c vs timestamp\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Thd_I_vs_timestamp = () => {\n  \n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let thd_i_a = [];\n    let thd_i_b = [];\n    let thd_i_c = [];\n    \n    let timestamp = [];\n    axios\n      .get(\"http://localhost:3000/register_values_em6400\")\n      .then(res => {\n        //console.log(res);\n        for (const dataObj of res.data) {\n          thd_i_a.push(parseInt(dataObj.thd_i_a));\n          thd_i_b.push(parseInt(dataObj.thd_i_b));\n          thd_i_c.push(parseInt(dataObj.thd_i_c));\n          \n          timestamp.push(parseInt(dataObj.timestamp));\n        }\n        setChartData({\n          labels:timestamp,\n          datasets: [\n            {\n              label: \"thd_i_a vs time\",\n              data: thd_i_a,\n              fill: false,\n              backgroundColor: \"rgba(75,192,192,1)\",\n              borderColor: \"rgba(75,192,192,1)\",\n              borderWidth: 4\n            },\n            {\n              label: \"thd_i_b vs time\",\n              data: thd_i_b,\n              fill:false,\n              borderColor:\"orange\",\n              backgroundColor:\"orange\",\n              borderWidth: 4\n            },\n            {\n              label: \"thd_i_c vs time\",\n              data: thd_i_c,\n              fill:false,\n              borderColor: \"#742774\",\n              backgroundColor: \"#742774\",\n              borderWidth: 4\n            },\n            \n            \n          ],\n         \n            type: 'line',\n           \n            options: {\n              responsive: true,\n              scales: {\n                x: {\n                  display: true,\n                  title: {\n                    display: true,\n                    text: 'Month',\n                    color: '#911',\n                    font: {\n                      family: 'Comic Sans MS',\n                      size: 20,\n                      weight: 'bold',\n                      lineHeight: 1.2,\n                    },\n                    padding: {top: 50, left: 0, right: 0, bottom: 0}\n                  }\n                },\n                y: {\n                  display: true,\n                  title: {\n                    display: true,\n                    text: 'Value',\n                    color: '#191',\n                    font: {\n                      family: 'Times',\n                      size: 20,\n                      style: 'normal',\n                      lineHeight: 1.2\n                    },\n                    padding: {top: 30, left: 0, right: 0,bottom: 0}\n                  }\n                },\n               \n              }\n             }\n\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //console.log(current2, voltage2);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <div className=\"linechart2\">\n      <h1>%_vs_Time_for_current</h1>\n      <div>\n        <Line data={chartData}\n          // options={{\n          //   responsive: true,\n            // scales: {\n            //   y: [\n            //     {\n            //       display: true,\n            //       title:{ display:true,\n            //       text:'month',\n            //       color:'#911',\n            //       font:{\n            //         family:'Comic Sans MS',\n            //         size:20,\n            //         weight:20,\n            //         lineHeight:1.2,\n            //       },},\n            //       //  ticks: {\n            //       //    autoSkip: true,\n            //       //    maxTicksLimit: 10,\n            //       //    beginAtZero: true,\n            //       //  },\n            //        gridLines: {\n            //          display: false\n            //        }\n            //     }\n            //   ],\n            //   x: [\n            //     {  \n            //       gridLines: {\n            //         display: false\n            //       }\n            //     }\n            //   ]\n            // }\n         // }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Thd_I_vs_timestamp;"]},"metadata":{},"sourceType":"module"}